<?php//If the user is removed from the group, his/her membership should be empty.function mobiiapp_membership_deassign($uid) {	$user = user_load($uid);		$result = db_query('SELECT membership_no 					FROM {mobiiapp_membership} 					WHERE assigned_to = :assigned_to',					array(						':assigned_to' => $user->name,					)				);					foreach ($result as $row) {		db_update('mobiiapp_membership')			->fields(				array(					'assigned_to' => '',					)				)			->condition('membership_no', $row->membership_no)			->execute();	}}//Check whether the user has membership assigned.function mobiiapp_membership_check($uid) {	$user = user_load($uid);		$existed = db_query('SELECT count(*) 						FROM {mobiiapp_membership} 						WHERE assigned_to = :assigned_to',						array(							':assigned_to' => $user->name,						)					)->fetchField();		if ($existed > 0) {		return true;	}	else {		return false;	}	}function mobiiapp_membership_form($form, &$form_state) {	global $user;		$is_super_admin = is_super_admin_mobiiapp($user->roles);	$unit_id = '';	if (!$is_super_admin) {		$unit = get_unit_by_uid($user->uid);		$unit_id = $unit['unit_id'];	}	$header = array(		'membership_no' => array('field' => 's.membership_no', 'data' => t('Membership No.')),		'assigned_to' => array('field' => 's.assigned_to', 'data' => t('Assigned To')),		'expired_date' => array('field' => 's.expired_date', 'data' => t('Expired Date')),	);	if ($is_super_admin) {		$header['unit_name'] = array('data' => t('Group'));	}	$header['operations'] = array('data' => t('Operations'));		$select = db_select('mobiiapp_membership', 's')		->extend('TableSort')		->extend('PagerDefault')->limit(20)		->fields('s');			if (!$is_super_admin) {		$select = $select->condition('unit_id', $unit_id, '=');	}	$select = $select->orderByHeader($header);	$result = $select->execute();			$disableds = array();	$options = array();	foreach ($result as $row) {		$entry = serialize(				array(										'membership_no' => $row->membership_no,					'unit_id' => $row->unit_id,					'assigned_to' => $row->assigned_to,				)			);		$query = array('query' => array('entry' => $entry));		$options[$row->membership_no] = array(			'membership_no' => array('data' => l($row->membership_no, 'mobiiapp/membership/history', $query)),			'assigned_to' => array('data' => $row->assigned_to),			'expired_date' => array('data' => date('Y-m-d', $row->expired_date)),			'operations' => array('data' => l(t('assign'), 'mobiiapp/membership/assign', $query)),					);				$_unit = get_unit($row->unit_id);		$unit_name = $_unit['unit_name'];			if ($is_super_admin) {						$options[$row->membership_no]['membership_no']['width'] = '20%';			$options[$row->membership_no]['assigned_to']['width'] = '20%';			$options[$row->membership_no]['expired_date']['width'] = '20%';			$options[$row->membership_no]['unit_name'] = array('data' => $unit_name, 'width' => '20%');			$options[$row->membership_no]['operations']['width'] = '20%';		}		else {			$options[$row->membership_no]['membership_no']['width'] = '25%';			$options[$row->membership_no]['assigned_to']['width'] = '25%';			$options[$row->membership_no]['expired_date']['width'] = '25%';			$options[$row->membership_no]['operations']['width'] = '25%';		}				$existed = db_query(						"SELECT count(*) FROM {mobiiapp_membership_history} WHERE membership_no = :membership_no", 						array(':membership_no' => $row->membership_no)					)->fetchField();		if ((time() > $row->expired_date) && ($existed == 0)) {			// The membership is expired and without any history, so it can be deleted.			$delete = l(t('delete'), 'mobiiapp/membership/delete', $query);			$options[$row->membership_no]['operations']['data'] .= '&nbsp;|&nbsp;'. $delete;					}				if (time() > $row->expired_date) {			$disableds[] = $row->membership_no;		}	}		$form['extend'] = array(		'#type' => 'submit',		'#value' => t('Extend'),		'#prefix' => '<div class="container-inline">',	);	$subscribe = l(t('Subscribe'), 'mobiiapp/membership/subscribe');			$form['subscribe'] = array(		'#type' => 'item',		'#title' => "<b>$subscribe</b>",		'#suffix' => '</div>',	);	$form['mobiiapp_membership_table'] = array(		'#type' => 'tableselect',		'#header' => $header,		'#options' => $options,		'#empty' => t('No Results Available.'),	);	foreach ($disableds as $id) {		$form['mobiiapp_membership_table'][$id]['#disabled'] = true;	}		$form['pager'] = array('#theme' => 'pager');		return $form;	}function mobiiapp_membership_form_validate($form, &$form_state) {	$selected_count = count(array_filter($form_state['values']['mobiiapp_membership_table']));	if ($selected_count == 0) {		form_set_error('', t('Please select the memberships to extend.'));	}	else {		$membership_nos = array();		foreach (array_filter($form_state['values']['mobiiapp_membership_table']) as $membership_no => $value){		       			$membership_nos[] = $membership_no; 	   		} 				$count_unit = db_query("SELECT count(distinct unit_id) 							FROM {mobiiapp_membership} 							WHERE membership_no IN (:memberships)",							array(								':memberships' => $membership_nos,							)					)->fetchField();				if ($count_unit > 1) {			form_set_error('', t('Please select the memships at the same unit.'));		}	}}function mobiiapp_membership_form_submit($form, &$form_state){	$membership_nos = array();	foreach (array_filter($form_state['values']['mobiiapp_membership_table']) as $membership_no => $value){		       		$membership_nos[] = $membership_no; 	   	} 	drupal_goto('mobiiapp/membership/extend', array('query' => array('membership_nos' => serialize($membership_nos))));     }function mobiiapp_membership_extend($form, &$form_state) {	$form['extend'] = array(		'#title' => t('Extend MemberShip'),		'#type' => 'fieldset',	);	$form['extend']['duration'] = array(		'#title' => t('Duration of Membership'),		'#type' => 'select',		'#options' => array(						12 => t('12 months'), 						10 => t('10 months'), 						9 => t('9 months'), 						8 => t('8 months'), 						7 => t('7 months'), 						6 => t('6 months'), 						5 => t('5 months'), 						4 => t('4 months'), 						3 => t('3 months'), 						2 => t('2 months'), 						1 => t('1 months')					),		'#required' => TRUE,	);	$form['submit'] = array(		'#value' => t('Submit'),		'#type' => 'submit', 	);	return $form;}function mobiiapp_membership_extend_submit($form, &$form_state) {	$membership_nos = unserialize($_GET['membership_nos']);	$duration = $form_state['values']['duration'];		$entry = serialize(				array(					'membership_nos' => $membership_nos,					'duration' => $duration,				)			);	$query = array('query' => array('entry' => $entry));			drupal_goto('mobiiapp/membership/extend_confirm', $query);}function mobiiapp_membership_extend_confirm($form, &$form_state) {	$entry = unserialize($_GET['entry']);	$membership_nos = $entry['membership_nos'];	$duration = $entry['duration'];	$item_value = 5;		$amount = count($membership_nos) * $duration * $item_value;	$results = db_query('SELECT * 						FROM {mobiiapp_membership} 						WHERE membership_no = :membership_no',						array(							':membership_no' => $membership_nos[0],						)				);	foreach ($results as $row) {		$unit_id = $row->unit_id;		break;	}		$form['item_value'] = array(		'#type' => 'value',		'#value' => $item_value,	);	$form['amount'] = array(		'#type' => 'value',		'#value' => $amount,	);		$form['confirm'] = array(		'#title' => t('Extend MemberShip Confirm'),		'#type' => 'fieldset',	);	$memberships_string = implode("<br/>", $membership_nos);	$form['confirm']['memberships'] = array(		'#type' => 'item',		'#title' => "<b>Memberships: </b> <br/>$memberships_string"	   	);	$form['confirm']['duration'] = array(		'#type' => 'item',		'#title' => "<b>Duration: </b> $duration months"	   	);	$form['confirm']['item_value'] = array(		'#type' => 'item',		'#title' => '<b>Item Value: </b>'. '$'. $item_value. '/month per membership',	   	);	$form['confirm']['amount'] = array(		'#type' => 'item',		'#title' => "<b>Amount: </b> $$amount"	   	);	$form['submit'] = array(		'#type' => 'submit',		'#value' => 'Submit',		'#prefix' => '<div class="container-inline">',	);	$cancel = l(t('Cancel'), 'mobiiapp/membership/');	$form['cancel'] = array(		'#title' => "<b>$cancel</b>",		'#type' => 'item',		'#suffix' => '</div>',	);	$form['#method'] = 'post';	$form['#action'] = 'https://mobiiappxt.softmaster.us/ipn_listener';	$form['cmd'] = array(		'#type' => 'hidden',		'#value' => '_xclick',	);	$form['bill_type'] = array(		'#type' => 'hidden',		'#value' => 'extend',	);	$form['business'] = array(		'#type' => 'hidden',		'#value' => 'sell2_1340708861_per@softmaster.us',	);	$form['currency_code'] = array(		'#type' => 'hidden',		'#value' => 'USD',	);	$form['membership_nos'] = array(		'#type' => 'hidden',		'#value' => serialize($membership_nos),	);	$form['unit_id'] = array(		'#type' => 'hidden',		'#value' => $unit_id,	);	$form['item_value'] = array(		'#type' => 'hidden',		'#value' => $item_value,	);	$form['quantity'] = array(		'#type' => 'hidden',		'#value' => count($membership_nos),	);	$form['duration'] = array(		'#type' => 'hidden',		'#value' => $duration,	);	$form['amount'] = array(		'#type' => 'hidden',		'#value' => $amount,	);	return $form;}function mobiiapp_membership_extend_confirm_submit($form, &$form_state) {		if ($form_state['values']['op'] == t('Submit')) {			global $user;		$entry = unserialize($_GET['entry']);		$membership_nos = $entry['membership_nos'];		$duration = $entry['duration'];		$item_value = $form_state['values']['item_value'];		$amount = $form_state['values']['amount'];				$today = getdate(time());		$subscribed_date = mktime(0, 0, 0, $today['mon'], $today['mday'], $today['year']);		$expired_date = mktime(0, 0, 0, $today['mon']+$duration, $today['mday'], $today['year']);				$memberships = array();				foreach ($membership_nos as $membership_no) {			$member = db_query('SELECT * 							FROM {mobiiapp_membership} 							WHERE membership_no = :membership_no',							array(								':membership_no' => $membership_no							)						)->fetchAssoc();			$the_day = getdate($member['expired_date']);			$subscribed_date = mktime(0, 0, 0, $the_day['mon'], $the_day['mday'], $the_day['year']);			$expired_date = mktime(0, 0, 0, $the_day['mon']+$duration, $the_day['mday'], $the_day['year']);						db_update('mobiiapp_membership')				->fields(					array(						'expired_date' => $expired_date,						)					)				->condition('membership_no', $membership_no)				->execute();						$membership = array(								'membership_no' => $membership_no,								'subscribed_date' => $subscribed_date,								'expired_date' => $expired_date,							);			$memberships[] = $membership;			$unit_id = $member['unit_id'];		}				$bill_no = time(). "$unit_id". "$user->uid";		db_insert('mobiiapp_bill')			->fields(				array(					'bill_no' => $bill_no,					'unit_id' => $unit_id,					'date' => time(),					'brought_by' => $user->name,					'item_value' => $item_value,					'quantity' => count($memberships),					'duration' => $duration,					'amount' => $amount,				)			)			->execute();				foreach ($memberships as $membership) {			db_insert('mobiiapp_membership_history')				->fields(					array(						'membership_no' => $membership['membership_no'],						'bill_no' => $bill_no,						'subscribed_date' => $membership['subscribed_date'],						'expired_date' => $membership['expired_date'],					)				)				->execute();		}	}	$form_state['redirect'] = 'mobiiapp/membership';}function mobiiapp_membership_subscribe($form, &$form_state) {	global $user;		$is_super_admin = is_super_admin_mobiiapp($user->roles);		$units = get_units();		if (count($units) == 0) {		drupal_goto('mobiiapp/unit/add');	}		$unit_id = '';	if (!$is_super_admin) {		$unit = get_unit_by_uid($user->uid);		$unit_id = $unit['unit_id'];	}	$default_value = ($is_super_admin)? key($units): $unit_id;				$selected = isset($form_state['values']['unit'])? $form_state['values']['unit']: $default_value;		$form['subscribe'] = array(		'#title' => t('Subscribe MemberShip'),		'#type' => 'fieldset',	);		$form['subscribe']['unit'] = array(		'#title' => t('Group'),		'#type' => 'select',		'#options' => $units,		'#default_value' => $selected,		'#disabled' => !$is_super_admin,		'#prefix' => '<div class="container-inline">',		'#suffix' => '</div>',	);		$form['subscribe']['quantity'] = array(		'#title' => t('Quantity of Memebership'),		'#type' => 'select',		'#options' => array(						5 => t('5 memberships'), 						10 => t('10 memberships'), 						15 => t('15 memberships'), 						20 => t('20 memberships'), 						25 => t('25 memberships'), 						30 => t('30 memberships'), 						35 => t('35 memberships'), 						40 => t('40 memberships'), 						45 => t('45 memberships'), 						50 => t('50 memberships'), 						55 => t('45 memberships'), 						60 => t('60 memberships'), 						65 => t('65 memberships'), 						70 => t('70 memberships'), 						75 => t('75 memberships'), 						80 => t('80 memberships'), 						85 => t('85 memberships'), 						90 => t('90 memberships'), 						95 => t('95 memberships'), 						100 => t('100 memberships')					),		'#required' => TRUE,	);	$form['subscribe']['duration'] = array(		'#title' => t('Duration of Membership'),		'#type' => 'select',		'#options' => array(						12 => t('12 months'), 						10 => t('10 months'), 						9 => t('9 months'), 						8 => t('8 months'), 						7 => t('7 months'), 						6 => t('6 months'), 						5 => t('5 months'), 						4 => t('4 months'), 						3 => t('3 months'), 						2 => t('2 months'), 						1 => t('1 months')					),		'#required' => TRUE,	);	$form['submit'] = array(		'#value' => t('Submit'),		'#type' => 'submit',		'#prefix' => '<div class="container-inline">',	);	$cancel = l(t('Cancel'), 'mobiiapp/membership/');	$form['cancel'] = array(		'#title' => "<b>$cancel</b>",		'#type' => 'item',		'#suffix' => '</div>',	);	return $form;}function mobiiapp_membership_subscribe_submit($form, &$form_state) {	$unit_id = $form_state['values']['unit'];	$quantity = $form_state['values']['quantity'];	$duration = $form_state['values']['duration'];		$entry = serialize(				array(					'unit_id' => $unit_id,					'quantity' => $quantity,					'duration' => $duration,				)			);	$query = array('query' => array('entry' => $entry));			drupal_goto('mobiiapp/membership/subscribe_confirm', $query);}function mobiiapp_membership_subscribe_confirm($form, &$form_state) {	$entry = unserialize($_GET['entry']);	$unit_id = $entry['unit_id'];	$quantity = $entry['quantity'];	$duration = $entry['duration'];	$item_value = 5;	$amount = $quantity * $duration * $item_value;		$form['unit_id'] = array(		'#type' => 'value',		'#value' => $unit_id,	);	$form['item_value'] = array(		'#type' => 'value',		'#value' => $item_value,	);	$form['quantity'] = array(		'#type' => 'value',		'#value' => $quantity,	);	$form['duration'] = array(		'#type' => 'value',		'#value' => $duration,	);	$form['amount'] = array(		'#type' => 'value',		'#value' => $amount,	);		$form['confirm'] = array(		'#title' => t('Subscribe MemberShip Confirm'),		'#type' => 'fieldset',	);		$form['confirm']['quantity'] = array(		'#type' => 'item',		'#title' => "<b>Quantity: </b> $quantity memberships"	   	);	$form['confirm']['duration'] = array(		'#type' => 'item',		'#title' => "<b>Duration: </b> $duration months"	   	);	$form['confirm']['item_value'] = array(		'#type' => 'item',		'#title' => '<b>Item Value: </b>'. '$'. $item_value. '/month per membership',	   	);	$form['confirm']['amount'] = array(		'#type' => 'item',		'#title' => "<b>Amount: </b> $$amount"	   	);	$form['submit'] = array(		'#type' => 'submit',		'#value' => 'Submit',		'#prefix' => '<div class="container-inline">',	);	$cancel = l(t('Cancel'), 'mobiiapp/membership/');	$form['cancel'] = array(		'#title' => "<b>$cancel</b>",		'#type' => 'item',		'#suffix' => '</div>',	);	$form['#method'] = 'post';	$form['#action'] = 'https://mobiiappxt.softmaster.us/ipn_listener';	$form['cmd'] = array(		'#type' => 'hidden',		'#value' => '_xclick',	);	$form['bill_type'] = array(		'#type' => 'hidden',		'#value' => 'subscribe',	);	$form['business'] = array(		'#type' => 'hidden',		'#value' => 'sell2_1340708861_per@softmaster.us',	);	$form['currency_code'] = array(		'#type' => 'hidden',		'#value' => 'USD',	);	$form['unit_id'] = array(		'#type' => 'hidden',		'#value' => $unit_id,	);	$form['item_value'] = array(		'#type' => 'hidden',		'#value' => $item_value,	);	$form['quantity'] = array(		'#type' => 'hidden',		'#value' => $quantity,	);	$form['duration'] = array(		'#type' => 'hidden',		'#value' => $duration,	);	$form['amount'] = array(		'#type' => 'hidden',		'#value' => $amount,	);	return $form;}function mobiiapp_membership_subscribe_confirm_submit($form, &$form_state) {		if ($form_state['values']['op'] == t('Submit')) {			global $user;		$unit_id = $form_state['values']['unit_id'];		$item_value = $form_state['values']['item_value'];		$quantity = $form_state['values']['quantity'];		$duration = $form_state['values']['duration'];		$amount = $form_state['values']['amount'];				$today = getdate(time());		$subscribed_date = mktime(0, 0, 0, $today['mon'], $today['mday'], $today['year']);		$expired_date = mktime(0, 0, 0, $today['mon']+$duration, $today['mday'], $today['year']);				$memberships = array();				//Update expired memberships.		$result = db_query('SELECT * 							FROM {mobiiapp_membership} 							WHERE unit_id = :unit_id 							AND expired_date < :expired_date',							array(								':unit_id' => $unit_id,								':expired_date' => time(),							)					);			foreach ($result as $row) {							db_update('mobiiapp_membership')				->fields(					array(						'expired_date' => $expired_date,						)					)				->condition('membership_no', $row->membership_no)				->execute();						$memberships[] = $row->membership_no;			$quantity = $quantity - 1;		}					//Insert new memberships.		$m_no_base = time(). "$unit_id". "$user->uid";		for ($i = 0; $i < $quantity; $i++) {			$membership_no = "$m_no_base". "$i";								db_insert('mobiiapp_membership')				->fields(					array(						'membership_no' => $membership_no,						'unit_id' => $unit_id,						'expired_date' => $expired_date,					)				)				->execute();						$memberships[] = $membership_no;		}				$bill_no = time(). "$unit_id". "$user->uid";		db_insert('mobiiapp_bill')			->fields(				array(					'bill_no' => $bill_no,					'unit_id' => $unit_id,					'date' => time(),					'brought_by' => $user->name,					'item_value' => $item_value,					'quantity' => count($memberships),					'duration' => $duration,					'amount' => $amount,				)			)			->execute();				foreach ($memberships as $membership_no) {			db_insert('mobiiapp_membership_history')				->fields(					array(						'membership_no' => $membership_no,						'bill_no' => $bill_no,						'subscribed_date' => $subscribed_date,						'expired_date' => $expired_date,					)				)				->execute();		}	}	$form_state['redirect'] = 'mobiiapp/membership';}function mobiiapp_membership_history($form, &$form_state) {	$entry = unserialize($_GET['entry']);	$membership_no = $entry['membership_no'];		$membership = db_query('SELECT * 							FROM {mobiiapp_membership} 							WHERE membership_no = :membership_no',							array(':membership_no' => $membership_no)					)->fetchAssoc();		$header = array(		'bill_no' => array('field' => 's.bill_no', 'data' => t('Bill No.')),		'status' => array('data' => t('Status')),		'subscribed_date' => array('field' => 's.subscribed_date', 'data' => t('Subscribed Date')),		'expired_date' => array('field' => 's.expired_date', 'data' => t('Expired Date')),	);	$result = db_select('mobiiapp_membership_history', 's')				->extend('TableSort')				->extend('PagerDefault')->limit(20)				->fields('s')						->condition('membership_no', $membership_no, '=')				->orderByHeader($header)				->execute();				$options = array();	foreach ($result as $row) {		$status = db_query(					'select payment_status from  mobiiapp_bill where bill_no = :bill_no', 					array(':bill_no' => $row->bill_no)				)->fetchField();		$entry = serialize(				array(										'bill_no' => $row->bill_no,				)			);		$query = array('query' => array('entry' => $entry));		$options[$row->membership_no.'-'.$row->bill_no] = array(			'bill_no' => array('data' => l($row->bill_no, 'mobiiapp/bill/membership', $query), 'width' => '40%'),			'status' => array('data' => $status, 'width' => '20%'),			'subscribed_date' => array('data' => date('Y-m-d', $row->subscribed_date), 'width' => '20%'),				'expired_date' => array('data' => date('Y-m-d', $row->expired_date), 'width' => '20%'),					);	}		$form['membership'] = array(		'#title' => t('Membership No. '). $membership['membership_no'],		'#type' => 'fieldset',   	);	$form['membership']['assigned_to'] = array(		'#type' => 'item',		'#title' => '<b>Assign To: </b>'. $membership['assigned_to'],	   	);	$form['membership']['expired_date'] = array(		'#type' => 'item',		'#title' => '<b>Expired Date: </b>'. date('Y-m-d', $membership['expired_date']),	   	);		$form['subscribe_history'] = array(		'#title' => t('Subscribe History'),		'#type' => 'fieldset',   	);		$form['subscribe_history']['mobiiapp_membership_history_table'] = array(		'#theme' => 'table',		'#header' => $header,		'#rows' => $options,		'#empty' => t('No Results Available.'),	);			$form['back'] = array(		'#type' => 'submit',		'#value' => t('Back'),	);		$form['pager'] = array('#theme' => 'pager');		return $form;}function mobiiapp_membership_history_submit($form, &$form_state) {	$form_state['redirect'] = 'mobiiapp/membership';}function mobiiapp_membership_assign($form, &$form_state) {	$entry = unserialize($_GET['entry']);	$unit_id = $entry['unit_id'];	$membership_no = $entry['membership_no'];	$assigned_to = $entry['assigned_to'];		$result = db_query(				'SELECT uid 				FROM {mobiiapp_units_users} 				WHERE unit_id = :unit_id				AND uid not in (					SELECT u.uid					FROM {users} u, {mobiiapp_membership} m					WHERE u.name = m.assigned_to				)',				array(					':unit_id' => $unit_id				)			);		$users = array();	$default_value = -1;	foreach ($result as $row) {		$user = user_load($row->uid);		$users[$row->uid] = $user->name;		$default_value = ($user->name == $assigned_to)? $row->uid: $default_value;	}		$form['membership_no'] = array(		'#type' => 'value',		'#value' => $membership_no,	);		$form['assigned_to'] = array(		'#title' => t('Assigned To'),		'#type' => 'select',		'#options' => $users,		'#description' => t('Assign the membership to an user of the group.'),	);		if ($default_value != -1) {		$form['assigned_to']['#default_value'] = $default_value;	}		$form['assign'] = array(		'#type' => 'submit',		'#value' => t('Assign'),	);	$form['cancel'] = array(		'#type' => 'submit', 		'#value' => t('Cancel'),			);		return $form;}function mobiiapp_membership_assign_submit($form, &$form_state) {	if ($form_state['values']['op'] == t('Assign')) {		$membership_no = $form_state['values']['membership_no'];		$assigned_to_uid = $form_state['values']['assigned_to'];		$user = user_load($assigned_to_uid);				db_update('mobiiapp_membership')			->fields(				array(					'assigned_to' => $user->name,					)				)			->condition('membership_no', $membership_no)			->execute();	}		$form_state['redirect'] = 'mobiiapp/membership';}function mobiiapp_membership_delete_confirm($form, &$form_state) {	$entry = unserialize($_GET['entry']);	$membership_no = $entry['membership_no'];		return confirm_form(				$form, 				t('Are you sure you want to delete the membership with No. %membership_no ?', 					array('%membership_no' => $membership_no)), 				'mobiiapp/membership', 				t('This action cannot be undone.'), 				t('Delete')			);}function mobiiapp_membership_delete_confirm_submit($form, &$form_state) {	$entry = unserialize($_GET['entry']);	$membership_no = $entry['membership_no'];		db_delete('mobiiapp_membership')		->condition('membership_no', $membership_no)		->execute();		$form_state['redirect'] = 'mobiiapp/membership';       }function mobiiapp_membership_ipn_listener(){	//$email = $_GET['ipn_email'];	$email = 'JAVIER_ZHANG@SOFTMASTER.US';		// PayPal settings	//$business_email = 'sell2_1340708861_per@softmaster.us';	$business_email = variable_get('site_mail', '');	global $base_root;		$return_url = $base_root.'/mobiiapp/membership';	$cancel_url = $base_root.'/mobiiapp/membership';	$notify_url = $base_root.'/ipn_listener';	if (!isset($_POST["txn_id"]) && !isset($_POST["txn_type"])){		global $user;		$business_email = $_POST['business'];		// Append amount& currency ($) to quersytring so it cannot be edited in html		//The item name and amount can be brought in dynamically by querying the $_POST['item_number'] variable.		$unit_id = $_POST['unit_id'];		$item_value = $_POST['item_value'];		$quantity = $_POST['quantity'];		$duration = $_POST['duration'];		$amount = $_POST['amount'];		$today = getdate(time());		$subscribed_date = mktime(0, 0, 0, $today['mon'], $today['mday'], $today['year']);		$expired_date = mktime(0, 0, 0, $today['mon']+$duration, $today['mday'], $today['year']);		$membership_nos = isset($_POST['membership_nos'])? unserialize($_POST['membership_nos']): null;				//generate membership bill 		$bill_no = time(). "$unit_id". "$user->uid";		db_insert('mobiiapp_bill')			->fields(				array(					'bill_no' => $bill_no,					'unit_id' => $unit_id,					'date' => time(),					'brought_by' => $user->name,					'item_value' => $item_value,					'quantity' => $quantity,					'duration' => $duration,					'amount' => $amount,				)			)			->execute();		if ($_POST['bill_type'] == 'extend'){			foreach ($membership_nos as $membership_no) {				watchdog('membership8',$membership_no.'+'.$bill_no.'+'.$subscribed_date.'+'.$expired_date);				db_insert('mobiiapp_membership_history')					->fields(						array(							'membership_no' => $membership_no,							'bill_no' => $bill_no,							'subscribed_date' => $subscribed_date,							'expired_date' => $expired_date,						)					)					->execute();			}		}				/*		$memberships = array();		//Update expired memberships.		$result = db_query('SELECT * 							FROM {mobiiapp_membership} 							WHERE unit_id = :unit_id 							AND expired_date < :expired_date',							array(								':unit_id' => $unit_id,								':expired_date' => time(),							)					);			foreach ($result as $row) {							db_update('mobiiapp_membership')				->fields(					array(						'expired_date' => $expired_date,						)					)				->condition('membership_no', $row->membership_no)				->execute();						$memberships[] = $row->membership_no;			$quantity = $quantity - 1;		}*//*		if ($_POST['bill_type'] == 'subscribe'){			//Insert new memberships.			$m_no_base = time(). "$unit_id". "$user->uid";			for ($i = 0; $i < $quantity; $i++) {				$membership_no = "$m_no_base". "$i";				db_insert('mobiiapp_membership')					->fields(						array(							'membership_no' => $membership_no,							'unit_id' => $unit_id,							'expired_date' => $expired_date,						)					)					->execute();								$memberships[] = $membership_no;			}		}else if ($_POST['bill_type'] == 'extend'){			$memberships = unserialize($_POST['membership_nos']);			foreach ($memberships as $membership) {				db_insert('mobiiapp_membership')					->fields(						array(							'membership_no' => $membership,							'unit_id' => $unit_id,							'expired_date' => $expired_date,						)					)					->execute();			}		}*//*		$bill_no = time(). "$unit_id". "$user->uid";		db_insert('mobiiapp_bill')			->fields(				array(					'bill_no' => $bill_no,					'unit_id' => $unit_id,					'date' => time(),					'brought_by' => $user->name,					'item_value' => $item_value,					'quantity' => count($memberships),					'duration' => $duration,					'amount' => $amount,				)			)			->execute();		foreach ($memberships as $membership_no) {			db_insert('mobiiapp_membership_history')				->fields(					array(						'membership_no' => $membership_no,						'bill_no' => $bill_no,						'subscribed_date' => $subscribed_date,						'expired_date' => $expired_date,					)				)				->execute();		}*/		//Append paypal account to querystring		// $querystirng = '';		$querystring = "?business=" . urlencode($business_email) . "&";		$querystring .= "cmd=".urlencode('_xclick')."&";		$querystring .= "item_number=".urlencode($bill_no)."&";		$querystring .= "item_name=".urlencode($bill_no)."&";		$querystring .= "currency_code=".urlencode('USD')."&";		$querystring .= "amount=".urlencode($amount)."&";		$querystring .= "quantity=".urlencode('1')."&";		$querystring .= "custom=".urlencode($user->name)."&"; // Append querystring with custom field		$querystring .= "return=".urlencode(stripslashes($return_url))."&"; // Append paypal return addresses		$querystring .= "cancel_return=".urlencode(stripslashes($cancel_url))."&";		$querystring .= "notify_url=".urlencode(stripslashes($notify_url));		header('location:https://www.sandbox.paypal.com/cgi-bin/webscr'.$querystring); // Redirect to paypal IPN		exit();	}else{		// Response from Paypal		// read the post from PayPal system and add 'cmd'		$req = 'cmd=_notify-validate';		foreach ($_POST as $key => $value) {			$value = urlencode(stripslashes($value));			$value = preg_replace('/(.*[^%^0^D])(%0A)(.*)/i','${1}%0D%0A${3}',$value);// IPN fix			$req .= "&$key=$value";		}		// assign posted variables to local variables		//$data['item_name'] = $_POST['item_name'];		$data['bill_no'] = $_POST['item_number'];		$data['payment_status'] = $_POST['payment_status'];		$data['payment_amount'] = $_POST['mc_gross'];		$data['payment_currency'] = $_POST['mc_currency'];		$data['txn_id']	= $_POST['txn_id'];		$data['receiver_email'] = $_POST['receiver_email'];		$data['payer_email'] = $_POST['payer_email'];		$data['custom'] = $_POST['custom'];		// post back to PayPal system to validate		$header = "POST /cgi-bin/webscr HTTP/1.0\r\n";		$header .= "Content-Type: application/x-www-form-urlencoded\r\n";		$header .= "Content-Length: " . strlen($req) . "\r\n\r\n";		$fp = fsockopen ('ssl://www.sandbox.paypal.com', 443, $errno, $errstr, 30);			if (!$fp) {			// HTTP ERROR		} else {			fputs ($fp, $header . $req);			while (!feof($fp)) {				$res = fgets ($fp, 1024);				if (strcmp($res, "VERIFIED") == 0) {					//@mail("you@youremail.com", "PAYPAL DEBUGGING", "Verified Response<br />data = <pre>".print_r($post, true)."</pre>");					foreach ($_POST as $key => $value){ 							$emailtext .= $key . " = " .$value ."\n\n"; 						} 						mail($email, "Live-VERIFIED IPN", $emailtext . "\n\n" . $req);					//Update bill's payment status.					db_update('mobiiapp_bill')							->fields(								array(									'payment_status' => $data['payment_status'],									'payment_data' => $emailtext,									)								)							->condition('bill_no', $data['bill_no'])							->execute();										if ($data['payment_status'] == 'Completed'){						$billResult = db_query('SELECT *												FROM {mobiiapp_bill} 												WHERE bill_no = :bill_no',												array(													':bill_no' => $data['bill_no'],												)										);						foreach ($billResult as $row) {							$unit_id = $row->unit_id;							$quantity = $row->quantity;							$duration = $row->duration;							$today = getdate(time());							$subscribed_date = mktime(0, 0, 0, $today['mon'], $today['mday'], $today['year']);							$expired_date = mktime(0, 0, 0, $today['mon']+$duration, $today['mday'], $today['year']);						}						$membershipHistoryResult = db_query('SELECT *															FROM {mobiiapp_membership_history} 															WHERE bill_no = :bill_no',															array(																':bill_no' => $data['bill_no']															)													);						$memberships = array();						foreach ($membershipHistoryResult as $row) {							$memberships[] = $row->membership_no;						}						if (empty($memberships)){							$bill_type = 'subscribe';							$memberships = array();							/*							//Update expired memberships.							$result = db_query('SELECT * 												FROM {mobiiapp_membership} 												WHERE unit_id = :unit_id 												AND expired_date < :expired_date',												array(													':unit_id' => $unit_id,													':expired_date' => time(),												)										);							foreach ($result as $row) {								watchdog('test11','ZZZZZ');								if ($quantity > 0 ){									db_update('mobiiapp_membership')										->fields(											array(												'expired_date' => $expired_date,												)											)										->condition('membership_no', $row->membership_no)										->execute();																		$memberships[] = $row->membership_no;									$quantity = $quantity - 1;								}else{									break;								}							}							*/							//Insert new memberships.							if ($quantity > 0 ){								$m_no_base = time(). "$unit_id". "$user->uid";								for ($i = 0; $i < $quantity; $i++) {									$membership_no = "$m_no_base". "$i";									db_insert('mobiiapp_membership')										->fields(											array(												'membership_no' => $membership_no,												'unit_id' => $unit_id,												'expired_date' => $expired_date,											)										)										->execute();											$memberships[] = $membership_no;								}							}							//Insert membership history							foreach ($memberships as $membership_no) {								db_insert('mobiiapp_membership_history')									->fields(										array(											'membership_no' => $membership_no,											'bill_no' => $data['bill_no'],											'subscribed_date' => $subscribed_date,											'expired_date' => $expired_date,										)									)									->execute();							}						}						else{							$bill_type = 'extend';							//Insert membership history							foreach ($memberships as $membership_no) {								$member = db_query('SELECT * 												FROM {mobiiapp_membership} 												WHERE membership_no = :membership_no',												array(													':membership_no' => $membership_no												)											)->fetchAssoc();								$the_day = getdate($member['expired_date']);								$subscribed_date = mktime(0, 0, 0, $the_day['mon'], $the_day['mday'], $the_day['year']);								$expired_date = mktime(0, 0, 0, $the_day['mon']+$duration, $the_day['mday'], $the_day['year']);								db_update('mobiiapp_membership')									->fields(										array(											'expired_date' => $expired_date,											)										)									->condition('membership_no', $membership_no)									->execute();								db_update('mobiiapp_membership_history')									->fields(										array(											'subscribed_date' => $subscribed_date,											'expired_date' => $expired_date,											)										)									->condition('membership_no', $membership_no)									->condition('bill_no', $data['bill_no'])									->execute();							}						}					}				}else if (strcmp ($res, "INVALID") == 0) {					// If 'INVALID', send an email. TODO: Log for manual investigation. 					foreach ($_POST as $key => $value){ 							$emailtext .= $key . " = " .$value ."\n\n"; 					} 						mail($email, "Live-INVALID IPN", $emailtext . "\n\n" . $req); 					}			}			fclose ($fp);		}	}	return ;}?>