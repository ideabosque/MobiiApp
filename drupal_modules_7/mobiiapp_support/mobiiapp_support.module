<?php
/**
 * implementation of hook_menu.
 */
function mobiiapp_support_menu() {
	$items = array();

	$items['mobiiapp_support'] = array(
		'title' => 'MobiiApp Support',
		'description' => 'Admin mobiiapp support.',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('mobiiapp_support_form'), 
		'access callback' => 'user_is_logged_in',
	);	
	$items['mobiiapp_support/add'] = array(
	    'title' => 'Add Ticket',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('mobiiapp_support_add'),
		'type' => MENU_CALLBACK,
		'access callback' => 'user_is_logged_in',
	);
	$items['mobiiapp_support/assign'] = array(
		'page callback' => 'drupal_get_form',
		'page arguments' => array('mobiiapp_support_assign'),
		'type' => MENU_CALLBACK,
		'access callback' => 'user_is_logged_in',
	);
	$items['mobiiapp_support/resolve'] = array(
		'title' => 'Resolve Ticket',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('mobiiapp_support_resolve'),
		'type' => MENU_CALLBACK,
		'access callback' => 'user_is_logged_in',
	);
	$items['mobiiapp_support/close'] = array(
		'page callback' => 'drupal_get_form',
		'page arguments' => array('mobiiapp_support_close'),
		'type' => MENU_CALLBACK,
		'access callback' => 'user_is_logged_in',
	);
	$items['mobiiapp_support/info'] = array(
	    'title' => 'Ticket Information',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('mobiiapp_support_info'),
		'type' => MENU_CALLBACK,
		'access callback' => 'user_is_logged_in',
	);
	$items['mobiiapp_support/comments'] = array(
		'title' => 'Add Comment',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('mobiiapp_support_comment'),
		'type' => MENU_CALLBACK,
		'access callback' => 'user_is_logged_in',
	);
	$items['mobiiapp_support/delete'] = array(
		'page callback' => 'drupal_get_form',
		'page arguments' => array('mobiiapp_support_delete_confirm'),
		'type' => MENU_CALLBACK,
		'access callback' => 'user_is_logged_in',
	);
	
	return $items;
}


function mobiiapp_support_mail($key, &$message, $params){
    global $user;	
	$options = array(
       'langcode' => $message['language']->language,
    );

    switch($key) {
        case 'receive':
            $message['subject'] = t('New ticket (@subject) is received(E-mail sent from @site-name)',  
									array(
										'@subject' => $params['subject'],
										'@site-name' => variable_get('site_name', 'MobiiApp')
									),
									$options);
			$message['body'][] = t('Hi @name', array('@name' => $user->name), $options);
			$message['body'][] = t('Your ticket (@subject) is received.  We will response in 24 hours.', 
										array(
										'@subject' => $params['subject'],
									),
									$options);
			$message['body'][] = t('Team MobiiApp');
            break;
		case 'create':
            $message['subject'] = t('@name created new ticket "@subject" (E-mail sent from @site-name)',  
									array(
										'@name' => $user->name, 
										'@subject' => $params['subject'],
										'@site-name' => variable_get('site_name', 'MobiiApp')),
									$options);
            $message['body'][] = t('Hi');
			$message['body'][] = t('The ticket (@subject) is created by @name. Please check it asap.', 
										array(
										'@subject' => $params['subject'],
										'@name' => $user->name,
									),
									$options);
			$message['body'][] = t('Team MobiiApp');
            break;
        case 'assign':
            $message['subject'] = t('Ticket "@subject" was assigned to @name (E-mail sent from @site-name)', 
									array(
										'@name' => $user->name, 
										'@subject' => $params['subject'],
										'@site-name' => variable_get('site_name', 'MobiiApp')), 
									$options);
            $message['body'][] = check_plain($params['message']);
			$message['body'][] = t('Team MobiiApp');
            break;
		case 'comment':
            $message['subject'] = t('Ticket "@subject" was commented by @name (E-mail sent from @site-name)', 
									array(
										'@name' => $user->name, 
										'@subject' => $params['subject'],
										'@site-name' => variable_get('site_name', 'MobiiApp')), 
									$options);
            $message['body'][] = check_plain($params['message']);
			$message['body'][] = t('Please reply the comment from web or client.');
			$message['body'][] = t('Team MobiiApp');
            break;
		case 'resolve':
            $message['subject'] = t('Ticket "@subject" was resolved by @name (E-mail sent from @site-name)', 
									array(
										'@name' => $user->name, 
										'@subject' => $params['subject'],
										'@site-name' => variable_get('site_name', 'MobiiApp')),
									$options);
            $message['body'][] = check_plain($params['message']);
			$message['body'][] = t('Team MobiiApp');
            break;
       // case 'delete':
          //  $message['subject'] = t('Subject was deleted by @name', array('@name' => $user->name), $options);
          //  $message['body'][] = check_plain($params['message']);
          //  break;
    }
}


function get_super_users() {
	$result = db_query(
				"select distinct ur.uid 
				from {role} r, {users_roles} ur, {role_permission} rp				 
				where r.rid = ur.rid 
				and ur.rid = rp.rid 
				and (r.name = 'administrator' 
					or rp.permission = 'super admin mobiiapp')"
			);
	
	$super_users = array();
	$super_users[] = '';
	foreach ($result as $row){
		$user = user_load($row->uid);
		$super_users[] = $user->name;
	}
	
	return $super_users;
}


function get_super_user_mails(){   
	$result = db_query(
				"select distinct ur.uid 
				from {role} r, {users_roles} ur, {role_permission} rp				 
				where r.rid = ur.rid 
				and ur.rid = rp.rid 
				and (r.name = 'administrator' 
					or rp.permission = 'super admin mobiiapp')"
			);

    $super_user_mails = array();
	foreach ($result as $row){
		$user = user_load($row->uid);
		$super_user_mails[] = $user->mail;
	}
	
	return $super_user_mails;
}


function mobiiapp_support_form($form, &$form_state) {
    global $user;	
	$is_super_admin = is_super_admin_mobiiapp($user->roles);
	if ($is_super_admin) {
        if(isset($_GET['filter_info'])) {
		    $entry = unserialize($_GET['filter_info']);
        }
		$form['filter'] = array(
		    '#title' => t('Filter'),
		    '#type' => 'fieldset',
			'#collapsible' => true,
			'#collapsed'   => true,
	    );
	    $form['filter']['subject'] = array(
		    '#title' => t('Subject'),
		    '#type' => 'textfield',
			'#default_value' => isset($entry['subject'])? $entry['subject'] : '',
		);
	    $super_users = get_super_users();
		$form['filter']['assign_to'] = array(
		    '#title' => t('Assign To'),
		    '#type' => 'select',
		    '#options' => $super_users,
		    '#default_value' => isset($entry['assign_to'])? $entry['assign_to'] : 0,
            '#description' => 'The default value is Null.',		
	    );
	    $form['filter']['created_df'] = array(
		    '#title' => t('Created Date From'),
		    '#type' => 'textfield',
		    '#default_value' => isset($entry['created_df'])? $entry['created_df'] : '',
			'#description' => 'Please input the date format as Y-m-d,e.g. 2012-01-01.',
     
	    );
		$form['filter']['created_dt'] = array(
		    '#title' => t('Created Date To'),
		    '#type' => 'textfield',
		    '#default_value' => isset($entry['created_dt'])? $entry['created_dt'] : '',
			'#description' => 'Please input the date format as Y-m-d,e.g. 2012-01-01.',
        );
		
	    $form['filter']['submit'] = array(
		   '#value' => t('Filter'),
		   '#type' => 'submit',
			'#prefix' => '<div class="container-inline">',
		);
		$reset = l(t('Reset'), 'mobiiapp_support');		
		$form['filter']['reset'] = array(
			'#type' => 'item',
			'#title' => "<b>$reset</b>",
			'#suffix' => '</div>',
		); 
	}
	$form['table'] = mobiiapp_support_list_form($form_state);
	return $form;
}


function mobiiapp_support_form_validate($form, &$form_state) {
	if (($form_state['values']['created_df'] != '') && 
			(!preg_match("/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/", $form_state['values']['created_df']))){
	    form_set_error('created_df', t("Please input right 'created date from' format as 2012-01-31."));
	}
	if (($form_state['values']['created_dt']) && 
			(!preg_match("/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/", $form_state['values']['created_dt']))){
	    form_set_error('created_dt_t', t("Please input right 'created date to format' as 2012-01-31."));
	}
}


function mobiiapp_support_form_submit($form, &$form_state) {
    $subject = $form_state['values']['subject'];
	$assign_to = $form_state['values']['assign_to'];
	$created_from = $form_state['values']['created_df'];
	$created_to = $form_state['values']['created_dt'];  
    $entry = serialize(array('subject' => $subject, 'assign_to' => $assign_to,'created_df' => $created_from,'created_dt'=> $created_to));
    $query = array('query' => array('filter_info' => $entry));
    
	drupal_goto('mobiiapp_support/', $query);
}


function mobiiapp_support_list_form($form_state){    
    global $user;	
	$is_super_admin = is_super_admin_mobiiapp($user->roles);
	$header = array(
		'subject' => array('field' => 'ms.subject', 'data' => t('Subject')),
		'status' => array('field' => 'ms.status', 'data' => t('Status')),
		'assign_to' => array('field' => 'ms.assign_to', 'data' => t('Assigned To')),
		'created_date' => array('field' => 'ms.created_date', 'data' => t('Created Date')),
		'created_by' => array('field' => 'ms.created_by', 'data' => t('Created By')),
		'updated_date' => array('field' => 'ms.updated_date', 'data' => t('Updated Date')),
	);	
	$header['operations'] = array('data' => t('Operations'), 'colspan' => 1);	

	$select = db_select('mobiiapp_support_info', 'ms');
    $select = $select->extend('TableSort');
	$select = $select->extend('PagerDefault')->limit(20);
	$select = $select->fields('ms');
	if (!$is_super_admin) {
		$select = $select->condition('created_by', $user->uid, '=');
	}
	if(isset($_GET['filter_info'])) {
	    $entry = unserialize($_GET['filter_info']);
	    $subject = $entry['subject'];
        $assign_to = $entry['assign_to'];
        $created_from = $entry['created_df'];
        $created_to = $entry['created_dt'];		
	  
	    $select = $select->condition('subject', $subject.'%', 'LIKE');
		if($assign_to){
			$select = $select->condition('assign_to', $assign_to, '=');
		}
		if($created_from){
		    $select = $select->condition('created_date', strtotime($created_from), '>=');}
		if($created_to){
		    $select = $select->condition('created_date', strtotime($created_to), '<=');}
	}
	$select = $select->orderByHeader($header);
	$result = $select->execute();

	
	$options = array();
	foreach ($result as $row) {
		$entry = serialize(array('id' => $row->id));
		$query = array('query' => array('entry' => $entry));
		
		$assign_to = ($row->assign_to != null)? user_load($row->assign_to): null;
		$created_by = user_load($row->created_by);
		
		$comment = l(t('comment'), 'mobiiapp_support/comments/', $query);
		
        if ($is_super_admin) {		
		    if ($row->status == 'New'){
		        $edit = l(t('assign'), 'mobiiapp_support/assign/', $query);			
		    }		    
		    if ($row->status == 'InProcess'){
		        $edit = l(t('resolve'), 'mobiiapp_support/resolve/', $query);
			    $edit = $edit. '&nbsp;|&nbsp;'. $comment;
		    }
		    if ($row->status == 'Resolved'){
		        $edit = l(t('close'), 'mobiiapp_support/close/', $query);
	        }		
		    if ($row->status == 'Closed'){
		        $edit = l(t('delete'), 'mobiiapp_support/delete/', $query);
			}
            if ($row->assign_to != $user->uid){
		        $edit = l(t('assign'), 'mobiiapp_support/assign/', $query);   
		    }          		    	    
		}
		else{
		    $edit = $comment;		    
		}
		
        // if (!$is_super_admin && $row->status == 'Closed') {
		        // $options[$row->id] = array();
		// }
		if ((!$is_super_admin && $row->status != 'Closed') || ($is_super_admin)) {		
			$options[$row->id] = array(
			    'subject' => array('data' => l(t($row->subject),'mobiiapp_support/info', $query)),
				'status' => array('data' => $row->status),
			    'assign_to' => array('data' => ($assign_to != null)? $assign_to->name: ''),
			    'created_date' => array('data' =>format_date($row->created_date,'custom', 'm/d/y')),
			    'created_by' => array('data' => $created_by->name),				
				'updated_date' => array('data' => format_date($row->updated_date,'custom', 'm/d/y')),
			    'operations' => array('data' => $edit),			
		    ); 		
		    $options[$row->id]['subject']['width'] = '40%';
		    $options[$row->id]['status']['width'] = '10%';
		    $options[$row->id]['assign_to']['width'] = '10%';
	        $options[$row->id]['created_date']['width'] = '10%';
		    $options[$row->id]['created_by']['width'] = '10%';
			$options[$row->id]['updated_date']['width'] = '10%';
		    $options[$row->id]['operations']['width'] = '10%';	
        }		
	}

	$add = l(t('Add Ticket'), 'mobiiapp_support/add');		
	$form['add'] = array(
		'#type' => 'item',
		'#title' => "<b>$add</b>",
	);
	$form['mobiiapp_support_table'] = array(
		'#theme' => 'table',
		'#header' => $header,
		'#rows' => $options,
		'#empty' => t('No Results Available.'),
	);	
	$form['pager'] = array('#theme' => 'pager');
	
	return $form;
}


function mobiiapp_support_add($form, &$form_state){
    global $user;	
	$is_super_admin = is_super_admin_mobiiapp($user->roles);	
	
	$form['add'] = array(
		'#type' => 'fieldset',
	);
	$form['add']['subject'] = array(
		'#title' => t('Subject'),
		'#type' => 'textfield',
		'#required' => TRUE,
	);	
	$form['add']['detail'] = array(
		'#title' => t('Detail'),
		'#type' => 'textarea',
		'#row' => 4,
		'#required' => TRUE,		
	);
	$form['submit'] = array(
		'#value' => t('Save'),
		'#type' => 'submit', 
		'#prefix' => '<div class="container-inline">',
	);
	$cancel = l(t('Cancel'), 'mobiiapp_support');		
	$form['cancel'] = array(
		'#type' => 'item',
		'#title' => "<b>$cancel</b>",
		'#suffix' => '</div>',
	); 
	
    return $form;
}


function mobiiapp_support_add_submit($form, &$form_state) {  
    global $user;	
    $module = 'mobiiapp_support';    
    $language = language_default();
	$send = true;
	
	$subject = $form_state['values']['subject'];
	$detail = $form_state['values']['detail'];
	$history = 'The subject '.$subject. ' was created by '.$user->name.' at  ' .date('Y-m-d H:i:s').'<br>';
	
	db_insert('mobiiapp_support_info')
		->fields(array(
		    'subject' => $subject,
			'status' => 'New',
			'detail' => $detail,
			'created_date' => time(),
            'created_by' => $user->uid,
			'updated_date' => time(),
			'updated_by' => $user->uid,
            'history' => $history			
			))
		->execute();
	
	$params = array();
	$params['subject'] = $subject;
	// $params['message'] = 'The subject (' . $subject.') was created by ' .$user->name;
	// $from = $user->mail;
	$from = variable_get('site_mail', '');
	$super_user_mails = get_super_user_mails();
	$to = implode(', ', $super_user_mails);
	
	$key = 'create';
    drupal_mail($module, $key, $to, $language, $params, $from, $send);
	$key = 'receive';
	$to = $user->mail;
    drupal_mail($module, $key, $to, $language, $params, $from, $send);
	
	$form_state['redirect'] = 'mobiiapp_support'; 

}


function mobiiapp_support_assign($form, &$form_state){
	global $user;	
    $module = 'mobiiapp_support';
    $key = 'assign';
    $language = language_default();
	$send = true;
	
	$entry = unserialize($_GET['entry']);
	$id = $entry['id'];	
	
	$support = db_query('SELECT ms.subject,
	                            ms.status,
								ms.history,
								ms.created_by
							FROM {mobiiapp_support_info} ms
							WHERE ms.id = :id', 
							array(':id' => $id))->fetchAssoc();
	
	$history = $support['history'] . '<br>'.'The subject '.$support['subject'] . ' has been assigned to '.$user->name. ' at  ' .date('Y-m-d H:i:s').'<br>';
	
	if($support['status'] == 'New'){
	    $update = db_update('mobiiapp_support_info')
		    ->fields(array(
		        'status' => 'InProcess',
			    'assign_to' => $user->uid,
			    'history' => $history,
			    'updated_by' => $user->uid,
			    'updated_date' => time()))
		        ->condition('id', $id)
		    ->execute();		
	}
	else{
	    $update = db_update('mobiiapp_support_info')
		    ->fields(array(
		        'assign_to' => $user->uid,
			    'history' => $history,
			    'updated_by' => $user->uid,
			    'updated_date' => time()))
		        ->condition('id', $id)
		    ->execute();	   	
	}
	
	$params = array();
	$params['subject'] = $support['subject'];
	$params['message'] = 'The ticket (' . $support['subject'].') was assigned to ' .$user->name;		
	if($support['created_by'] != $user->uid){
	    // $from = $user->mail;
		$from = $user->mail . ', ' . variable_get('site_mail', '');
		$creator = user_load($support['created_by']);
	    $to = $creator->mail;
	    drupal_mail($module, $key, $to, $language, $params, $from, $send);
	}
	
	drupal_goto('mobiiapp_support');
}


function mobiiapp_support_resolve($form, &$form_state){
    $entry = unserialize($_GET['entry']);
	$id = $entry['id'];
	
	$solution = db_query('SELECT solution FROM {mobiiapp_support_info}  WHERE id = :id',array(':id'=> $id))->fetchField();	
    
	$form['solution'] = array(
		'#title' => t('<b>Solution</b>'),
		'#type' => 'fieldset',
	);
	$form['solution']['display'] = array(
		'#title' => t('Solution'),
		'#title_display' => 'invisible',
		'#type' => 'item',
		'#description' => $solution,
	);
	$form['solution']['add_solution'] = array(
		'#title' => t('Add Solution'),
		'#title_display' => 'invisible',
		'#type' => 'textarea',
		'#row' => 3,
	);	
	$form['solution']['submit'] = array(
		'#value' => t('Add Solution'),
		'#type' => 'submit', 
		'#prefix' => '<div class="container-inline">',
	);
	$cancel = l(t('Cancel'), 'mobiiapp_support');		
	$form['solution']['cancel'] = array(
		'#type' => 'item',
		'#title' => "<b>$cancel</b>",
		'#suffix' => '</div>',
	); 
	
    return $form;
}


function mobiiapp_support_resolve_validate($form, &$form_state) {
    if(empty($form_state['values']['add_solution'])){
	    form_set_error('add_solution', t('Please input the right solution which can not be null.'));    
	}
}


function mobiiapp_support_resolve_submit($form, &$form_state) {
    $entry = unserialize($_GET['entry']);
	$id = $entry['id'];	
	global $user;	
    $module = 'mobiiapp_support';
    $key = 'resolve';
    $language = language_default();
	$send = true;
	
	$support = db_query('SELECT ms.subject,
	                            ms.solution,
								ms.history,
								ms.created_by
							FROM {mobiiapp_support_info} ms
							WHERE ms.id = :id', 
							array(':id' => $id))->fetchAssoc();
		
	
	$history =  $support['history'].  '<br>' .'Solution posted by   '.$user->name . '  at  '.date('Y-m-d H:i:s');
	$solution = $support['solution'] . '<br>' . $form_state['values']['add_solution'];
	
	$update = db_update('mobiiapp_support_info')
		->fields(array(
		    'status' => 'Resolved',
			'solution' => $solution,
			'history' => $history,
			'updated_by' => $user->uid,
			'updated_date' => time()))
		->condition('id', $id)
		->execute();
	
	$params = array();
	$params['subject'] = $support['subject'];
	$params['message'] =  $form_state['values']['add_solution']. "\n". 'The ticket (' . $support['subject'].') was resolved by ' .$user->name;	
	if($support['created_by'] != $user->uid){
	    $from = $user->mail . ', ' . variable_get('site_mail', '');
		$creator = user_load($support['created_by']);
	    $to = $creator->mail;
        drupal_mail($module, $key, $to, $language, $params, $from, $send);
	}
	
	drupal_goto('mobiiapp_support');  
}


function mobiiapp_support_comment($form, &$form_state){
    $entry = unserialize($_GET['entry']);
	$id = $entry['id'];
	
	$comments = db_query('SELECT comments FROM {mobiiapp_support_info}  WHERE id = :id',array(':id'=> $id))->fetchField();
	  
	$form['comments'] = array(
		'#title' => t('<b>Comments</b>'),
		'#type' => 'fieldset',
	);	
	$form['comments']['detail'] = array(
		'#title' => t('Comments'),
		'#title_display' => 'invisible',
		'#type' => 'item',
		'#description' => $comments,
	);
	$form['comments']['add_comment'] = array(
		'#title' => t('Add Comment'),
		'#title_display' => 'invisible',
		'#type' => 'textarea',
		'#row' => 2,		
	);	
	$form['comments']['submit'] = array(
		'#value' => t('Add Comment'),
		'#type' => 'submit', 
		'#prefix' => '<div class="container-inline">',
	);
	$cancel = l(t('Cancel'), 'mobiiapp_support');		
	$form['comments']['cancel'] = array(
		'#type' => 'item',
		'#title' => "<b>$cancel</b>",
		'#suffix' => '</div>',
	);  
	
    return $form;
}


function mobiiapp_support_comment_validate($form, &$form_state) {
    if(empty($form_state['values']['add_comment'])){
	    form_set_error('add_comment', t('Please input the right comment which can not be null.'));    
	}

}


function mobiiapp_support_comment_submit($form, &$form_state) {
    $entry = unserialize($_GET['entry']);
	$id = $entry['id'];
	global $user;	
    $module = 'mobiiapp_support';
    $key = 'comment';
    $language = language_default();
	$send = true;
	
	$support = db_query('SELECT ms.subject,
	                            ms.status,
	                            ms.comments,
								ms.history,
								ms.created_by,
								ms.assign_to
     						FROM {mobiiapp_support_info} ms
							WHERE ms.id = :id', 
							array(':id' => $id))->fetchAssoc();
		
	
	$history =  $support['history'].  '<br>' .'Comment posted by   '. $user->name . '  at  '.date('Y-m-d H:i:s');
	$comments = $support['comments'] . '<br>' .  $form_state['values']['add_comment'] . '<br>'. 'By '.$user->name.'   at   '.date('Y-m-d H:i:s');
	
	$update = db_update('mobiiapp_support_info')
		->fields(array(
		    'comments' => $comments,
			'history' => $history,
			'updated_by' => $user->uid,
			'updated_date' => time()))
		->condition('id', $id)
		->execute();
	
	$params = array();
	$params['subject'] = $support['subject'];
	$params['message'] =  $form_state['values']['add_comment']. "\n". 'The ticket (' . $support['subject'].') was commented by ' .$user->name;

	if($support['status'] != 'New'){
	    if($support['assign_to'] != $user->uid){
			$from = 'NoReply@mobiiapp.com';
	        $assignee = user_load($support['assign_to']);
	        $to =  $assignee->mail;
		    drupal_mail($module, $key, $to, $language, $params, $from, $send);
		}
		else {
			$from = $user->mail . ', ' . variable_get('site_mail', '');
	        $creator = user_load($support['created_by']);
			$to = $creator->mail;
		    drupal_mail($module, $key, $to, $language, $params, $from, $send);
		}
	}
	else{
		$from = 'NoReply@mobiiapp.com';
	    $super_user_mails = get_super_user_mails();
	    $to = implode(', ', $super_user_mails);
		drupal_mail($module, $key, $to, $language, $params, $from, $send);
	}
    
	drupal_goto('mobiiapp_support'); 
}


function mobiiapp_support_close($form, &$form_state){
    global $user;
	$entry = unserialize($_GET['entry']);
	$id = $entry['id'];
	$support = db_query('SELECT ms.subject,
									ms.history
									
							FROM {mobiiapp_support_info} ms
							WHERE ms.id = :id', 
							array(':id' => $id))->fetchAssoc();
	$history =  $support['history'].  '<br>' .'The subject '.$support['subject'].' is closed by   '.$user->name.'  at  '.date('Y-m-d H:i:s').'<br>';
    
	$update = db_update('mobiiapp_support_info')
		->fields(array(
		    'status' => 'Closed',
			'history' => $history,
			'updated_by' => $user->uid,
			'updated_date' => time()))
		->condition('id', $id)
		->execute();
	
	drupal_goto('mobiiapp_support');
}


function mobiiapp_support_info($form, &$form_state){
    $entry = unserialize($_GET['entry']);
	$id = $entry['id'];
	$support = db_query('SELECT ms.subject,
									ms.detail,
									ms.solution,
									ms.comments,
									ms.history								
									
							FROM {mobiiapp_support_info} ms
							WHERE ms.id = :id', 
							array(':id' => $id))->fetchAssoc();
	$entry = serialize(array('id' => $id));
	$query = array('query' => array('entry' => $entry));
	$subject = l(t($support['subject']), 'mobiiapp_support/', $query);
	$form['display'] = array(
		'#title' => t('<b>Ticket Detail</b>'),
		'#type' => 'fieldset',
	);
	$form['display']['subject'] = array(
		'#title' => t('<b>Subject</b>'),
		'#type' => 'item',
		'#description' => $subject,		
	);	
	$form['display']['detail'] = array(
		'#title' => t('<b>Detail</b>'),
		'#type' => 'item',
		'#description' => $support['detail'],		
	);	
	$form['display']['comment'] = array(
		'#title' => t('<b>Comments</b>'),
		'#type' => 'item',
		'#description' => $support['comments'],		
	);						
    $form['display']['solution'] = array(
		'#title' => t('<b>Solution</b>'),
		'#type' => 'item',
		'#description' => $support['solution'],		
	);
    $form['display']['history'] = array(
		'#title' => t('<b>History</b>'),
		'#type' => 'item',
		'#description' => $support['history'],		
	);
	$back = l(t('Back'), 'mobiiapp_support');		
	$form['display']['back'] = array(
		'#type' => 'item',
		'#title' => "<b>$back</b>",
	);  
    return $form;
}


function mobiiapp_support_delete_confirm($form, &$form_state){
    $entry = unserialize($_GET['entry']);
    $subject = db_query('SELECT m.subject FROM {mobiiapp_support_info} m WHERE id = :id',array(':id' => $entry['id']))->fetchField();

	return confirm_form($form, 
						t('Are you sure you want to delete the item %subject ?', 
							array('%subject' => $subject)), 
						'mobiiapp_support', 
						t('This action cannot be undone.'), 
						t('Delete'));
}


function mobiiapp_support_delete_confirm_submit($form, &$form_state) {
	$entry = unserialize($_GET['entry']);
	$id = $entry['id'];
	
    db_delete('mobiiapp_support_info')
        ->condition('id',$id)
		->execute();	
	
	$form_state['redirect'] = 'mobiiapp_support';     
} 


?>
